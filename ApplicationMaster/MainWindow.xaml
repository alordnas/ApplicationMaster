<Window x:Class="Casamia.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local ="clr-namespace:Casamia"
		xmlns:data ="clr-namespace:Casamia.Model"
		xmlns:core ="clr-namespace:Casamia.Core"
		xmlns:casamiaConvert="clr-namespace:Casamia.Converter"
		WindowStyle="ThreeDBorderWindow" 
		WindowStartupLocation="CenterScreen"
		Title="{Binding Source={x:Static core:WorkSpaceManager.Instance} , Mode=OneWay, Path=WorkSpace, StringFormat=WorkSpace - \{0\}}"
		Icon="Images/Logo.ico"
		>

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="MainformResource.xaml"></ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
			
			<MenuItem x:Key="createProject_MenuItem" Header="创建新项目"  x:Name="creatProject_MenuItem" Click="createUnity_MenuItem_Click">
				<MenuItem.Icon>
					<Image Width="20" Height="20"/>
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem x:Key="svnUpdata_MenuItem" Header="Svn 更新"  >
				<MenuItem.Icon>
					<Image Width="20" Height="20" Source="Images/ParentFolder.png" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem x:Key="openExplorer_MenuItem" x:Name ="openExplorer_MenuItem"  Header="在浏览器中打开" Click="openExplorer_MenuItem_Click" >
				<MenuItem.Icon>
					<Image Width="20" Height="20" Source="Images/folder.jpg" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem x:Key="expand_MenuItem" Header="展开" Click="expand_MenuItem_Click" >
				<MenuItem.Icon>
					<Image Width="20" Height="20" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem x:Key="shrink_MenuItem" Header="收起" Click="shrink_MenuItem_Click" >
				<MenuItem.Icon>
					<Image Width="20" Height="20" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem x:Key="checkout_MenuItem"  x:Name="checkoutSelected_MenuItem" Click="checkoutSelected_MenuItem_Click" >
			</MenuItem>


			<Style TargetType="DataGridRow">
				<Style.Triggers>
					<!--Trigger for Log dataGrid.-->
					<DataTrigger Binding="{Binding Level}" Value="Error">
						<Setter Property="Foreground" Value="Red" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Level}" Value="Warning">
						<Setter Property="Foreground" Value="Yellow" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Level}" Value="Infomation">
						<Setter Property="Foreground" Value="Black" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Level}" Value="Verbos">
						<Setter Property="Foreground" Value="LightGray" />
					</DataTrigger>

					<!--Trigger for TaskStatus-->
					<DataTrigger Binding="{Binding Status}" Value="Running">
						<Setter Property="Foreground" Value="Orange" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Status}" Value="Error">
						<Setter Property="Foreground" Value="Red" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Status}" Value="Timeout">
						<Setter Property="Foreground" Value="Yellow" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Status}" Value="Completed">
						<Setter Property="Foreground" Value="Green" />
					</DataTrigger>
					<DataTrigger Binding="{Binding Status}" Value="Cancel">
						<Setter Property="Foreground" Value="LightGray" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<casamiaConvert:EnumDescriptionConverter x:Key="enumDescriptionConverter" />
			<casamiaConvert:ProgressConverter x:Key="progressConverter" />
			<casamiaConvert:DebugConverter x:Key="debugConverter" />
			
			
		</ResourceDictionary>
		
	</Window.Resources>

	
	<Grid >
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" MinHeight="20"/>
			<RowDefinition Height="1*"/>
			<RowDefinition Height="Auto" MinHeight="16"/>
		</Grid.RowDefinitions>

		<Menu Grid.Row="0" >
			<MenuItem Header="工作集" ItemsSource="{Binding Path=WorkSpaceCollectionViewModel.WorkSpaces }">
				<MenuItem.ItemContainerStyle>
					<Style TargetType="MenuItem">
						<Setter Property="MenuItem.Header" Value="{Binding Path=Name}"/>
						<Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuItem}, Path=DataContext.SwitchWorkSpaceCommand}" />
						<Setter Property="CommandParameter" Value="{Binding}" />
					</Style>
				</MenuItem.ItemContainerStyle>
			</MenuItem>
			<MenuItem x:Name="edit_MenuItem" Header="编辑" >
				<MenuItem  x:Name="openDir_MenuItem" Header ="更改..."  Click="openDir_MenuItem_Click"/>
				<MenuItem Header="程序编辑"  Click="executors_MenuItem_Click"/>
				<MenuItem Header="工作集编辑"  Click="preference_MenuItem_Click"/>
				<MenuItem Header="任务编辑" Click="taskManager_MenuItem_Click"/>
				<Separator></Separator>
				<MenuItem x:Name="selectAll_MenuItem" Header="全选(Ctrl + A)"  Click="selectAll_MenuItem_Click"/>
				<MenuItem x:Name="selectNone_MenuItem" Header="撤选(Ctrl + N)"  Click="selectNone_MenuItem_Click"/>
				<Separator />
				<MenuItem x:Name="exportDir_MenuItem" Header="导出列表"  Click="exportDir_MenuItem_Click"/>
				<MenuItem x:Name="importDir_MenuItem" Header="导入列表"  Click="importDir_MenuItem_Click"/>
				<Separator />
				<MenuItem x:Name="expand_MenuItem" Header="展开(Ctrl + E)" Click="expand_MenuItem_Click"/>
				<MenuItem x:Name="shrink_MenuItem" Header="收起(Ctrl + S)"  Click="shrink_MenuItem_Click"/>

			</MenuItem>
			<MenuItem Header="Unity">
				<MenuItem x:Name="createUnity_MenuItem" Header="新建项目" Click="createUnity_MenuItem_Click"/>
			</MenuItem>

			<MenuItem Header="Svn">
				<MenuItem x:Name="openSvn_MenuItem" Header="打开Svn"  Click="openSvn_MenuItem_Click"/>
				<MenuItem x:Name="closeSvn_MenuItem" Header="退出Svn" Click="closeSvn_MenuItem_Click"/>
				<Separator />
				<MenuItem x:Name="checkout_MenuItem" Header="检出选中"  Click="checkout_MenuItem_Click"/>
			</MenuItem>

			<MenuItem Header="任务" ItemsSource="{Binding Path=TaskCollectionViewModel.ProtoTasks}">
				<MenuItem.ItemContainerStyle>
					<Style TargetType="MenuItem">
						<Setter Property="MenuItem.Header" Value="{Binding Path=Name}"/>
						<Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuItem}, Path=DataContext.ExecuteProtoTaskCommmand}" />
						<Setter Property="CommandParameter" Value="{Binding}" />
					</Style>
				</MenuItem.ItemContainerStyle>
			</MenuItem>
		</Menu>

		<Grid Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.5*"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="0.6*"/>
			</Grid.ColumnDefinitions>
			<!--Tree view-->
			<Grid >
				<Grid.RowDefinitions>
					<RowDefinition Height="28"/>
					<RowDefinition />
				</Grid.RowDefinitions>

				<Grid HorizontalAlignment="Stretch">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1*"/>
					</Grid.ColumnDefinitions>
					<TextBox x:Name = "dir_TextBox"  Grid.Column="0" Text="{Binding Path=CurrentWorkSpace.Path, Mode=OneWay}"  FontSize="15" Background="Transparent"
								  IsEnabled="False"/>
					<ProgressBar Grid.Column="0" 
											 Value="{Binding Percent}" 
											 Orientation="Horizontal" 
											 IsIndeterminate="False"   
											 BorderThickness="0" 
											 HorizontalAlignment="Stretch" 
											 VerticalAlignment="Stretch" 
											 Visibility="Hidden"/>
				</Grid>

				<Border Grid.Row="1" Grid.Column="0"  BorderThickness ="5,0,5,5">
					<TreeView x:Name="dir_TreeView"  
									  AllowDrop="True" 
									  DragEnter="dir_TreeView_DragEnter" 
									  MouseRightButtonDown="dir_TreeView_MouseRightButtonDown">
						<TreeView.ItemTemplate>
							<HierarchicalDataTemplate DataType="{x:Type data:TreeNode}" 
															  ItemsSource="{Binding Path = children}">
								<StackPanel x:Name="treeItem_StackPanel" 
													Margin="-2,0,0,0" 
													Orientation="Horizontal" 
													Height="15" MouseRightButtonDown="treeItem_StackPanel_MouseRightButtonDown">
									<CheckBox ToolTip="{Binding filePath}" 
													  FontSize="14"
													  FontFamily="微软雅黑" 
													  Tag="{Binding children}" 
													  IsChecked="{Binding isChecked, Mode=TwoWay}" 
													  PreviewMouseDown="CheckBox_PreviewMouseDown"
													  Checked="CheckBox_Checked" 
													  Unchecked="CheckBox_Unchecked" >
										<StackPanel x:Name ="item_StackPanel" Orientation="Horizontal" MouseLeftButtonDown="item_StackPanel_MouseLeftButtonDown">
											<Image VerticalAlignment="Center" Height="20" Width="20" Source="{Binding icon}"/>
											<TextBlock x:Name="fileName_TextBlock" Text="{Binding fileName}" Margin="0,-2,0,-2" ></TextBlock>
										</StackPanel>
									</CheckBox>
								</StackPanel>
							</HierarchicalDataTemplate>
						</TreeView.ItemTemplate>
					</TreeView>
				</Border>
			</Grid>
			<GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
			</GridSplitter>

			<Grid Grid.Column="2">
				<Grid.RowDefinitions>
					<RowDefinition Height="0.75*"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="0.25*"/>
				</Grid.RowDefinitions>

				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="1*" />
						<RowDefinition Height="30" />
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<ComboBox ItemsSource="{Binding Path=WorkSpaceCollectionViewModel.WorkSpaces}" SelectedItem="{Binding Path=WorkSpaceCollectionViewModel.CurrentWorkSpace}" Grid.Row="4">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Path=Name}" ToolTip="{Binding Path=Description}"></TextBlock>
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<GroupBox Header="任务"   BorderThickness="2" Grid.Row="0">
						<DataGrid x:Name="task_DataGrid" Margin="5" ItemsSource="{Binding Path=ActiveTasks}" AutoGenerateColumns="False" 
												  CanUserAddRows="False" SelectedItem="{Binding Path=SelectedActiveTask}">
							<DataGrid.Columns>
								<DataGridTextColumn Header="任务名" Width="100" Binding="{Binding Name}"/>
								<DataGridTextColumn Header="完成度" Width="50" Binding="{Binding  Path=CommandViewModelCollection, Converter={StaticResource progressConverter }}"/>
								<DataGridTextColumn Header="开始时间" Width="70" Binding="{Binding StartTime ,Mode=OneWay,  StringFormat=\{0:HH:mm:ss\}}"/>
								<DataGridTextColumn Header="耗时" Width="70" Binding="{Binding Duration ,Mode=OneWay,  StringFormat=\{0:hh\\:mm\\:ss\}}"/>
								<DataGridTextColumn Header="状态" Width="70" Binding="{Binding Status}"/>
								<DataGridTextColumn Header="描述" Width="*" Binding="{Binding Description}"/>
							</DataGrid.Columns>
						</DataGrid>
					</GroupBox>

					<StackPanel Grid.Row="1" Orientation="Horizontal" FlowDirection="RightToLeft">
						<Button x:Name="stopTask_Button" Width="50" Margin="5,3" HorizontalAlignment="Right" IsEnabled="False" Content="终止" Click="stopTask_Button_Click"/>
						<Button x:Name="redoTask_Button" Width="50" Margin="5,3" HorizontalAlignment="Right" IsEnabled="False" Content="重做" Click="redoTask_Button_Click"/>
						<Button x:Name="parallel_Button" Width="60" Margin="5,3" HorizontalAlignment="Right" IsEnabled="False" Content="立即开始" Click="parallel_Button_Click"/>
					</StackPanel>

					<GridSplitter Grid.Row="2" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
					</GridSplitter>

					<GroupBox Grid.Row="3" Header="细节"   BorderThickness="2">
						<DataGrid x:Name="commandDataGrid" Margin="5"  ItemsSource="{Binding Path=SelectedActiveTask.CommandViewModelCollection}" AutoGenerateColumns="False" 
												  CanUserAddRows="False">
							<DataGrid.Columns>
								<DataGridTextColumn Header="命令" Width="50" Binding="{Binding Description}"/>
								<DataGridTextColumn Header="参数" Width="100" Binding="{Binding Argument}" IsReadOnly="False"/>
								<DataGridTextColumn Header="开始时间" Width="70" Binding="{Binding StartTime ,Mode=OneWay, StringFormat=\{0:HH:mm:ss\}}"/>
								<DataGridTextColumn Header="耗时" Width="70" Binding="{Binding Duration, Mode=OneWay, StringFormat=\{0:hh\\:mm\\:ss\}}"/>
								<DataGridTextColumn Header="超时" Width="70" Binding="{Binding Timeout,Mode=OneWay, StringFormat=\{0:hh\\:mm\\:ss\}}"/>
								<DataGridTemplateColumn Width="80" >
									<DataGridTemplateColumn.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="状态" />
										</DataTemplate>
									</DataGridTemplateColumn.HeaderTemplate>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Status}" VerticalAlignment="Center"/>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Width="*" IsReadOnly="False" >
									<DataGridTemplateColumn.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="结果" />
										</DataTemplate>
									</DataGridTemplateColumn.HeaderTemplate>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Output}">
												<TextBlock.ToolTip>
													<TextBlock Text="{Binding Output}"></TextBlock>
												</TextBlock.ToolTip>
																</TextBlock>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Width="*" IsReadOnly="False" >
									<DataGridTemplateColumn.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="错误" />
										</DataTemplate>
									</DataGridTemplateColumn.HeaderTemplate>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Error}">
												<TextBlock.ToolTip>
													<TextBlock Text="{Binding Error}"></TextBlock>
												</TextBlock.ToolTip>
																</TextBlock>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>

							</DataGrid.Columns>

						</DataGrid>
					</GroupBox>
				</Grid>

				<GridSplitter Grid.Row="1" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
				</GridSplitter>

				<GroupBox Grid.Row="2" Header="显示"   BorderThickness="2" Margin="5,5,0,5">

					<Border  BorderThickness="1" Margin="5" CornerRadius="0">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" MinWidth="100"/>
								<ColumnDefinition Width="2*"/>
							</Grid.ColumnDefinitions>
							<DockPanel x:Name="DisplayOptionArea" Grid.Column="0">
								<Button Content="Clear" VerticalAlignment="Top" Click="Button_Click" Height="20" DockPanel.Dock="Top" Width="70" />
								<ListBox Name="filterListBox" ItemsSource="{Binding}" SelectionMode="Multiple" SelectionChanged="lb_SelectionChanged" Width="auto" Height="auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
							</DockPanel>
							<DataGrid x:Name="LogGrid" Grid.Column="1"  ItemsSource="{Binding}" AutoGenerateColumns="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
								<DataGrid.Columns>
									<DataGridTextColumn Binding="{Binding Date, StringFormat=\{0:HH:mm:ss\}}"  Header="时间" IsReadOnly="True"/>
									<DataGridTemplateColumn>
										<DataGridTemplateColumn.HeaderTemplate>
											<DataTemplate>
												<TextBlock Text="消息" />
											</DataTemplate>
										</DataGridTemplateColumn.HeaderTemplate>
										<DataGridTemplateColumn.CellTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding Message}">
													<TextBlock.ToolTip>
														<TextBlock Text="{Binding Message}"></TextBlock>
													</TextBlock.ToolTip>
																</TextBlock>
											</DataTemplate>
										</DataGridTemplateColumn.CellTemplate>
									</DataGridTemplateColumn>
									<DataGridTextColumn Binding="{Binding Level}" Header="级别" IsReadOnly="True" Visibility="Hidden"/>
								</DataGrid.Columns>
							</DataGrid>
						</Grid>
					</Border>
				</GroupBox>
			</Grid>


		</Grid>
		<Grid Grid.Row="2" >
			<TextBlock x:Name="status_TextBlock" Text="{Binding}" Foreground="White" Margin="12,0">
			</TextBlock>
		</Grid>
	</Grid>
</Window>
